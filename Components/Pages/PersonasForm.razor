@page "/personas/nueva"
@page "/personas/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPersonas _repositorio;
<h2>@_mensaje Socio</h2>
<EditForm Model="_persona" FormName="frmPersona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_persona.Nombre"/>
            <ValidationMessage For="()=>_persona.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_persona.Correo"/>
            <ValidationMessage For="()=>_persona.Correo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Telefono</label>
        <div class="col-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="_persona.Telefono" />
            <ValidationMessage For="()=>_persona.Telefono" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtClase" class="col-2 col-form-label">Clases</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_clasesSeleccionadas" multiple size ="3">
                @foreach(Clase clase in _clases)
                {
                    <option value="@clase.Id">@clase.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtClasificaciones" class="col-2 col-form-label">Plan</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_persona.ClasificacionId">
                <option value="0" enabled="enabled">Escoja el Plan...</option>
                @foreach (Clasificacion clasificacion in _clasificaciones)
                {
                    <option value="@clasificacion.Id">@clasificacion.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>_persona.ClasificacionId" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    public string _mensaje = "";
    private Persona? _persona = new();
    private List<Clasificacion> _clasificaciones = new();
    private List<Clase> _clases = new();
    private int[] _clasesSeleccionadas = new int[] { };

    protected override async Task OnInitializedAsync()
    {
        _clasificaciones = await _repositorio.GetClasificaciones();
        _clases = await _repositorio.GetClases();
        if(Id > 0)
        {
            _persona = await _repositorio.Get(Id);
            if(_persona.Clases.Count != 0 )
            {
                _clasesSeleccionadas = _persona.Clases.Select(i => i.Id).ToArray();
            }
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nuevo";
        }
    }

    private async void Guardar()
    {
        if (_clasesSeleccionadas.Count() > 0)
        {
            List<Clase> clases = new();
        foreach (int idClase in _clasesSeleccionadas)
            {
                clases.Add(_clases.First(r => r.Id == idClase));
            }
            _persona.Clases = clases;
        }
        else
        {
            _persona.Clases = null;
        }
        if(Id>0)
        {
            await _repositorio.Update(Id, _persona!);
        }
        else
        {
            await _repositorio.Add(_persona!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/personas");
    }
}
